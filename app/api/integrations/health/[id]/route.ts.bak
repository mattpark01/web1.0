import { NextRequest, NextResponse } from 'next/server'
import { getAuthUser } from '@/lib/auth'
import { prisma } from '@/lib/prisma'
import { checkIntegrationHealth } from '@/lib/integrations/core/status'

/**
 * GET /api/integrations/health/[id] - Check health of specific integration
 */
export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const session = await getAuthUser(request)
    if (!user) {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })
    }
    
    // Verify ownership
    const integration = await prisma.integration.findFirst({
      where: { 
        id: params.id,
        userId: user.id 
      }
    })
    
    if (!integration) {
      return NextResponse.json({ error: 'Integration not found' }, { status: 404 })
    }
    
    // Check health
    const health = await checkIntegrationHealth(params.id)
    
    if (!health) {
      return NextResponse.json({ error: 'Health check failed' }, { status: 500 })
    }
    
    return NextResponse.json(health)
    
  } catch (error) {
    console.error('Health check error:', error)
    return NextResponse.json(
      { error: 'Failed to check integration health' },
      { status: 500 }
    )
  }
}